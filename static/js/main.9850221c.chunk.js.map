{"version":3,"sources":["components/chat/Chat.module.css","components/historical/historical.module.css","components/chatBoard/ChatBoard.module.css","components/initMessage/InitMessage.module.css","components/actionCard/ActionCard.module.css","components/chatButton/ChatButton.module.css","services/initService.js","components/historical/historical.js","components/initMessage/InitMessage.js","components/actionCard/ActionCard.js","components/chatBoard/ChatBoard.js","components/chat/Chat.js","components/chatButton/ChatButton.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","service","fetch","then","response","json","Historical","className","styles","historicalHeader","href","historicalContent","historicalItem","left","src","alt","hr","btnMsj","msjIcon","Component","InitMessage","boardMessage","icon","ActionCard","lastItem","ctaButton","ChatBoard","props","state","show","sendMsj","board","header","style","background","this","primaryColor","boardContent","footer","defaultProps","ChatButton","handleButton","btnChat","onClick","class","App","e","setState","showBoard","secondaryColor","getConf","data","color","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.9850221c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"messagescontent\":\"Chat_messagescontent__2EPFU\",\"block\":\"Chat_block__147jb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"historicalHeader\":\"historical_historicalHeader__1_Ma9\",\"historicalItem\":\"historical_historicalItem__4fQHb\",\"historicalContent\":\"historical_historicalContent__34eEh\",\"left\":\"historical_left__1kM7O\",\"hr\":\"historical_hr__Z1nvz\",\"btnMsj\":\"historical_btnMsj__3ZJgu\",\"msjIcon\":\"historical_msjIcon__2R17V\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"board\":\"ChatBoard_board__2kTn_\",\"hide\":\"ChatBoard_hide__1LhBn\",\"header\":\"ChatBoard_header__1mqJ7\",\"boardContent\":\"ChatBoard_boardContent__217bs\",\"footer\":\"ChatBoard_footer__3GXhV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"icon\":\"InitMessage_icon__2n1Q_\",\"boardMessage\":\"InitMessage_boardMessage__SiwnZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"lastItem\":\"ActionCard_lastItem__2Ie6C\",\"ctaButton\":\"ActionCard_ctaButton__LBsbi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btnChat\":\"ChatButton_btnChat__R9yD_\"};","/** @format */\r\n\r\nexport const service = {};\r\n\r\nservice.getConf = () => {\r\n  return fetch('http://localhost:4000/example').then((response) => {\r\n    return response.json();\r\n  });\r\n};\r\n\r\n// export default service;\r\n","/** @format */\r\n\r\nimport React, { Component } from 'react';\r\nimport styles from './historical.module.css';\r\n\r\nclass Historical extends Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className={`cardContainer`}>\r\n          <div className={styles.historicalHeader}>\r\n            <p>Conversaciones</p>\r\n            <a href=''>Ver Todas</a>\r\n          </div>\r\n          <div className={styles.historicalContent}>\r\n            <div className={styles.historicalItem}>\r\n              <div className={styles.left}>\r\n                <img src='https://picsum.photos/id/237/100/100' alt='' />\r\n                <span>\r\n                  <p> Empresa</p>\r\n                  <p>tu: mensaje</p>\r\n                </span>\r\n              </div>\r\n              <span>date</span>\r\n            </div>\r\n            <div className={styles.hr}></div>\r\n            <div className={styles.historicalItem}>\r\n              <div className={styles.left}>\r\n                <img src='https://picsum.photos/id/237/100/100' alt='' />\r\n                <span>\r\n                  <p> Empresa</p>\r\n                  <p>tu: mensaje</p>\r\n                </span>\r\n              </div>\r\n              <span>date</span>\r\n            </div>\r\n          </div>\r\n          <button className={`btn ${styles.btnMsj}`}>\r\n            <i className={`fas fa-chevron-circle-right ${styles.msjIcon}`}></i>\r\n            Enviar Mensaje\r\n          </button>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Historical;\r\n","/** @format */\r\n\r\nimport React, { Component } from 'react';\r\nimport styles from './InitMessage.module.css';\r\n\r\nclass InitMessage extends Component {\r\n  render() {\r\n    return (\r\n      <div className={styles.boardMessage}>\r\n        <div className={styles.icon}>\r\n          <i className='fas fa-exclamation-circle'></i>\r\n        </div>\r\n        <h4>Tittle</h4>\r\n        <span>\r\n          Lorem ipsum dolor sit amet consectetur adipisicing elit. Animi, optio.\r\n        </span>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default InitMessage;\r\n","/** @format */\r\n\r\nimport React, { Component } from 'react';\r\nimport styles from './ActionCard.module.css';\r\n\r\nclass ActionCard extends Component {\r\n  render() {\r\n    return (\r\n      <div className={`cardContainer ${styles.lastItem}`}>\r\n        <h4>Titttle</h4>\r\n        <p>\r\n          Lorem, ipsum dolor sit amet consectetur adipisicing elit. Reiciendis,\r\n          libero!\r\n        </p>\r\n        <button className={`btn ${styles.ctaButton}`}>Call To Action</button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ActionCard;\r\n","/** @format */\r\n\r\nimport React, { Component } from 'react';\r\nimport styles from './ChatBoard.module.css';\r\nimport Historical from '../historical/historical';\r\nimport InitMessage from '../initMessage/InitMessage';\r\nimport Actioncard from '../actionCard/ActionCard';\r\nimport Chat from '../chat/Chat';\r\n\r\n// const show = false;\r\n\r\nclass ChatBoard extends Component {\r\n  constructor(props) {\r\n    super();\r\n    this.state = { show: false, sendMsj: false };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={styles.board}>\r\n        <div\r\n          className={styles.header}\r\n          style={{ background: this.props.primaryColor }}\r\n        ></div>\r\n        <div className={styles.boardContent}>\r\n          <InitMessage />\r\n          <Historical />\r\n          <Historical />\r\n          <Actioncard />\r\n        </div>\r\n        {/* <Chat /> */}\r\n        <div className={styles.footer}>\r\n          <i className='fas fa-exclamation-circle'></i>\r\n          <span>Powered by Tikket</span>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nChatBoard.defaultProps = {\r\n  primaryColor: '#1f82ff',\r\n};\r\nexport default ChatBoard;\r\n","/** @format */\r\n\r\nimport React, { Component } from 'react';\r\nimport styles from './Chat.module.css';\r\n\r\nclass Chat extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className={styles.messagescontent}>\r\n          <div className={styles.block}></div>\r\n          <div className={styles.block}></div>\r\n          <div className={styles.block}></div>\r\n          <div className={styles.block}></div>\r\n          <div className={styles.block}></div>\r\n          <div className={styles.block}></div>\r\n          <div className={styles.block}></div>\r\n          <div className={styles.block}></div>\r\n          <div className={styles.block}></div>\r\n        </div>\r\n        <div className={styles.chatInput}>\r\n          <input type='text' />\r\n          <a href=''>\r\n            <i class='fa fa-paperclip' aria-hidden='true'></i>\r\n          </a>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Chat;\r\n","/** @format */\r\n\r\nimport React, { Component } from 'react';\r\nimport styles from './ChatButton.module.css';\r\n\r\nclass ChatButton extends Component {\r\n  render() {\r\n    const { handleButton } = this.props;\r\n    return (\r\n      <button\r\n        className={`btn ${styles.btnChat}`}\r\n        onClick={handleButton}\r\n        style={{ background: this.props.primaryColor }}\r\n      >\r\n        <i class='fas fa-comments'></i>\r\n      </button>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ChatButton;\r\n","/** @format */\n\nimport React, { Component } from 'react';\nimport './App.css';\nimport { service } from './services/initService';\nimport ChatBoard from './components/chatBoard/ChatBoard';\nimport ChatButton from './components/chatButton/ChatButton';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      showBoard: '',\n      primaryColor: '#1082ff',\n      secondaryColor: '#ffffff',\n    };\n  }\n  handleButton = (e) => {\n    this.setState({ showBoard: !this.state.showBoard });\n  };\n\n  componentDidMount() {\n    service\n      .getConf()\n      .then((data) => this.setState({ primaryColor: data.color }));\n  }\n\n  render() {\n    return (\n      <div className='App'>\n        <div className='chat-container'>\n          <ChatBoard\n            primaryColor={this.state.primaryColor}\n            showBoard={this.state.showBoard}\n          />\n          <ChatButton\n            handleButton={this.handleButton}\n            primaryColor={this.state.primaryColor}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}